{"version":3,"file":"static/js/1422.c8307e06.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/XYChartDefaultTheme.ts","../node_modules/src/.internal/core/render/Button.ts","../node_modules/src/.internal/charts/xy/XYChart.ts","../node_modules/src/.internal/charts/xy/axes/Axis.ts","../node_modules/src/.internal/charts/xy/axes/AxisTick.ts","../node_modules/src/.internal/charts/xy/axes/AxisLabel.ts","../node_modules/src/.internal/charts/xy/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/xy/axes/Grid.ts","../node_modules/src/.internal/charts/xy/axes/ValueAxis.ts","../node_modules/src/.internal/charts/xy/series/XYSeries.ts","../node_modules/src/.internal/charts/xy/series/BaseColumnSeries.ts","../node_modules/src/.internal/charts/xy/series/ColumnSeries.ts","../node_modules/src/.internal/core/render/Bullet.ts"],"sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\t\t\t\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth:1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable:true,\r\n\t\t\tpaddingTop:0,\r\n\t\t\tpaddingBottom:0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\t\t\r\n\r\n\t}\r\n}\r\n","import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(event.point);\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tthis._updateFinals(start, end);\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart){\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\t\t\t\t\t\t\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Series } from \"../../core/render/Series\";\n\nexport interface IBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal location within target element.\n\t *\n\t * 0 - left, 1 - right, or anything inbetweeen.\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location within target element.\n\t *\n\t * 0 - top, 1 - bottom, or anything inbetweeen.\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * If set to `true`, the bullet will redraw its `sprite` element whenever\n\t * anything in its parent series changes.\n\t *\n\t * @default false\n\t */\n\tdynamic?: boolean;\n\n\t/**\n\t * If set to `true`, the bullet will be automatically rotated to face\n\t * direction of line it is attached to.\n\t *\n\t * NOTE: Works only in  [[Flow]] and [[MapPointSeries]] (when [[MapPoint]] is\n\t * attached to a [[MapLine]]).\n\t *\n\t * @default false\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * If `autoRotate` is set to `true`, value of `autoRotateAngle` will be added\n\t * to the automatically-calculated angle.\n\t */\n\tautoRotateAngle?: number;\n\n}\n\nexport interface IBulletPrivate extends IEntityPrivate {\n\thidden?:boolean;\n}\n\n/**\n * A universal placeholder for bullet elements.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n */\nexport class Bullet extends Entity {\n\tpublic static className: string = \"Bullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Bullet.className]);\n\n\tdeclare public _settings: IBulletSettings;\n\tdeclare public _privateSettings: IBulletPrivate;\n\n\t// used by MapPolygons where one data item can have multiple bullets of the same kind\n\tpublic _index?: number;\n\n\t/**\n\t * Target series object if it's a bullet for series.\n\t */\n\tpublic series: Series | undefined;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because bullet will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tconst sprite = this.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n\t\t\tif (this.series) {\n\t\t\t\tthis.series._positionBullet(this);\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["XYChartDefaultTheme","Theme","setupDefaultRules","super","ic","this","_root","interfaceColors","language","r","rule","bind","setAll","colors","ColorSet","new","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","saturation","fillOpacity","setColor","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","p100","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","moveThreshold","strokeDasharray","ariaLabel","translate","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","p50","crisp","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","$type","setPrivate","gridIntervals","timeUnit","count","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","$array","$object","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","endValue","intervalDuration","baseInterval","getPrivate","gridInterval","min","$time","Date","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","round","baseValue","logarithmic","autoZoom","step","$math","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","percent","strokeWidth","role","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","Button","Container","_afterNew","_settings","themeTags","$utils","background","set","RoundedRectangle","_prepareChildren","isDirty","previous","_prevSettings","icon","_disposeProperty","dispose","children","push","label","Object","defineProperty","classNames","concat","className","XYChart","SerialChart","constructor","ListAutoDispose","chartContainer","layout","verticalLayout","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","topPlotContainer","Graphics","x","y","_defaultThemes","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","Rectangle","fill","Color","fromHex","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","_posYDp","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","dataItems","isHidden","isHiding","startIndex","endIndex","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","showDataItemTooltip","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_colorize","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","grip","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","colorSet","color","next","_setSoft","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","insertIndex","oldValue","Error","moveValue","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","_handleAxisSelection","force","indexOf","setRaw","updateGrips","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","sort","a","b","$order","prevY","Percent","top","bottom","_fy","reverse","prevBottom","bounds","Axis","Component","List","_dispose","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","DataItem","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","duration","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","to","easing","animate","key","once","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","labels","ticks","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","handleCursorShow","handleCursorHide","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisTick","Tick","AxisLabel","Label","AxisRenderer","ListTemplate","Template","_new","template","Grid","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","MultiDisposer","someDirty","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_handleRangeChange","_prepareAxisItems","_baseValue","_formatText","numberFormat","formatter","getNumberFormatter","format","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_dataItems","processDataItem","stepPower","floor","decCount","j","inited","valueToPosition","fillEndPosition","hasTag","positionToValue","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","getDataItemCoordinateX","field","_cellLocation","axisLocation","getDataItemPositionX","getStackedXValueWorking","getDataItemCoordinateY","getDataItemPositionY","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","_fixMin","_fixMax","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","len","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","Number","MAX_VALUE","maxCount","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","fieldName","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","XYSeries","Series","fields","valueFields","_setRawDefault","_removeAxisRange","_makeFieldNames","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","baseAxis","minBulletDistance","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","_tooltipFieldX","tooltipFieldY","_tooltipFieldY","stacked","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_dataGrouped","_stackDirty","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mainContainer","mask","_updateChildren","_x","_y","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","createLegendMarker","_axesDirty","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","getPoint","_shouldShowBullet","_positionX","_positionY","setDataSet","id","_dataSets","_handleDataSetChange","_dataSetId","resetGrouping","dataSet","_mainDataItems","mainDataItems","bullets","promises","_super","call","then","_isShowing","_sequencedShowHide","Promise","all","_isHiding","_valueFields","waitForStop","_markDirtyStack","stackedSeries","_skipped","hideTooltip","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","markDirtyText","_getTooltipTarget","legendDataItem","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_shouldInclude","_position","resetExtremes","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","categoryAxis","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_updateGraphics","markerRectangle","ds","visualSettings","setting","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","close","previousClose","apply","list","lastDataItem","column","ColumnSeries","Bullet","Entity","_afterNewApplyThemes"],"sourceRoot":""}