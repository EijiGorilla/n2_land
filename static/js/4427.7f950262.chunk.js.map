{"version":3,"file":"static/js/4427.7f950262.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts","chart/HandedOverAreaChart.tsx"],"sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import { useRef, useState, useEffect, memo } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { generateHandedOverAreaData } from '../components/Query';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\nconst HandedOverAreaChart = memo(() => {\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [lotHandedOverAreaData, setLotHandedOverAreaData] = useState([]);\r\n\r\n  const chartID = 'lot-handedover';\r\n  useEffect(() => {\r\n    generateHandedOverAreaData().then((result: any) => {\r\n      setLotHandedOverAreaData(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panY',\r\n        wheelY: 'zoomY',\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Handed-Over Area (m2)',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      }),\r\n    );\r\n\r\n    // Create axes\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    // Label properties Y axis\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    yRenderer.grid.template.setAll({\r\n      location: 1,\r\n    });\r\n    yAxis.data.setAll(lotHandedOverAreaData);\r\n\r\n    // Set xaxis\r\n    var xRenderer = am5xy.AxisRendererX.new(root, {\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    // Remove xaxis labels\r\n    xRenderer.labels.template.set('visible', false);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        min: 0,\r\n        max: 100,\r\n        strictMinMax: true,\r\n        calculateTotals: true,\r\n        renderer: xRenderer,\r\n      }),\r\n    );\r\n\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          baseAxis: yAxis,\r\n          valueXShow: 'valueXTotalPercent',\r\n          valueXField: fieldName,\r\n          categoryYField: 'category',\r\n          fill: am5.color('#0070ff'),\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        //tooltipText: \"{name}, {categoryY}: {valueX}%\",\r\n        //tooltipY: am5.percent(90)\r\n      });\r\n      series.data.setAll(lotHandedOverAreaData);\r\n\r\n      // Make stuff animate on load\r\n      // https://www.amcharts.com/docs/v5/concepts/animations/\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text: '{valueX}%',\r\n            fill: am5.color('#ffffff'), //root6.interfaceColors.get(\"alternativeText\"),\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n            fontSize: 12,\r\n          }),\r\n        });\r\n      });\r\n    }\r\n    makeSeries('Value', 'value');\r\n    chart.appear(1000, 100);\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, lotHandedOverAreaData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '35vh',\r\n          width: '30%',\r\n          backgroundColor: '#2b2b2b',\r\n          color: 'white',\r\n          position: 'absolute',\r\n          zIndex: 99,\r\n          bottom: 10,\r\n          marginLeft: '1vw',\r\n          marginRight: 'auto',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default HandedOverAreaChart;\r\n"],"names":["CategoryAxis","Axis","constructor","Object","defineProperty","_afterNew","this","_settings","themeTags","$utils","fields","push","setPrivateRaw","addTag","super","_prepareChildren","len","dataItems","length","i","_valuesDirty","_itemMap","$array","dataItem","setRaw","get","Math","max","round","min","_sizeDirty","isDirty","isPrivateDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","series","startCategory","startIndex","endCategory","endIndex","baseAxis","xAxis","yAxis","_markDirtyAxes","key","openKey","otherAxis","className","startDataItem","endDataItem","indexOf","setPrivate","hasValue","__valueXShowFields","__valueYShowFields","renderer","maxCount","axisLength","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","j","_toggleDataItem","f","_createAssets","_prepareDataItem","_updateGhost","fillIndex","count","categoryLocation","endCategoryLocation","index","$type","categoryToIndex","position","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","getPrivate","baseValue","basePosition","getX","value","axisDataItem","positionToCoordinate","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","location","startLocation","dataItemToPosition","roundAxisPosition","axisPositionToIndex","$math","getTooltipText","_adjustPosition","label","populateString","_updateTooltipText","tooltip","_setDataItem","text","markDirtyText","getSeriesItem","fieldName","seriesDataItem","zoomToIndexes","start","end","duration","zoom","zoomToCategories","getCellWidthPosition","classNames","concat","memo","chartRef","useRef","lotHandedOverAreaData","setLotHandedOverAreaData","useState","chartID","useEffect","generateHandedOverAreaData","then","result","_root$_logo","divId","am5","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","am5xy","panX","panY","wheelX","wheelY","layout","verticalLayout","current","unshift","fontSize","fontWeight","textAlign","fill","x","centerX","paddingTop","paddingBottom","yRenderer","strokeOpacity","strokeWidth","stroke","yAxes","categoryField","labels","template","setAll","grid","data","xRenderer","set","xAxes","strictMinMax","calculateTotals","name","stacked","valueXShow","valueXField","categoryYField","columns","appear","bullets","sprite","centerY","populateText","makeSeries","_jsx","_Fragment","style","height","width","backgroundColor","color","zIndex","bottom","marginLeft","marginRight"],"sourceRoot":""}