{"version":3,"file":"static/js/938.70be1cfd.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/XYCursor.ts","../node_modules/src/.internal/charts/xy/axes/DateAxis.ts","chart/LotProgressChart.tsx"],"sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\t\t\tconst utc = this._root.utc;\n\t\t\t\t\tconst timezone = this._root.timezone\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\tstartTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\tvalue = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n}\n","import { useRef, useState, useEffect } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { dateFormat, generateLotProgress } from '../components/Query';\r\nimport { lotLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\nconst LotProgressChart = ({ municipal, barangay, nextwidget }: any) => {\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const xAxisRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [lotProgressData, setLotProgressData] = useState([]);\r\n\r\n  const chartID = 'lot-progress';\r\n  useEffect(() => {\r\n    generateLotProgress(municipal, barangay).then((result: any) => {\r\n      setLotProgressData(result);\r\n    });\r\n  }, [municipal, barangay]);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panX',\r\n        wheelY: 'zoomX',\r\n        paddingBottom: 35,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Chart title\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Monthly Progress of Handed-Over Lots',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      }),\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    var cursor = chart.set(\r\n      'cursor',\r\n      am5xy.XYCursor.new(root, {\r\n        behavior: 'zoomX',\r\n      }),\r\n    );\r\n    cursor.lineY.set('visible', false);\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        maxDeviation: 0,\r\n        groupData: true,\r\n        baseInterval: {\r\n          timeUnit: 'day',\r\n          count: 1,\r\n        },\r\n        groupIntervals: [{ timeUnit: 'month', count: 1 }],\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 60,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n\r\n        //tooltip: am5.Tooltip.new(root, {})\r\n      }),\r\n    );\r\n\r\n    let xRenderer = xAxis.get('renderer');\r\n    xRenderer.labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        calculateTotals: true,\r\n        min: 0,\r\n        renderer: am5xy.AxisRendererY.new(root, {\r\n          minGridDistance: 60,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",//\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n    xAxisRef.current = xAxis;\r\n    yAxisRef.current = yAxis;\r\n\r\n    // Add yaxix title\r\n    yAxis.children.unshift(\r\n      am5.Label.new(root, {\r\n        rotation: -90,\r\n        text: 'No. of handed-over lots',\r\n        y: am5.p50,\r\n        centerX: am5.p50,\r\n        fill: am5.color('#ffffff'),\r\n        fontSize: 11,\r\n      }),\r\n    );\r\n\r\n    // Add legend\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.p50,\r\n        centerY: am5.percent(50),\r\n        x: am5.p50,\r\n        y: am5.percent(108),\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: 17,\r\n      scale: 0.8,\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    // Add series\r\n    var series = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: 'Series',\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: 'value',\r\n        valueXField: 'date',\r\n        valueYGrouped: 'sum',\r\n      }),\r\n    );\r\n\r\n    series.bullets.push(function () {\r\n      return am5.Bullet.new(root, {\r\n        locationY: 1,\r\n        locationX: 0.5,\r\n        sprite: am5.Label.new(root, {\r\n          text: '{valueYTotal}',\r\n          fill: root.interfaceColors.get('alternativeText'),\r\n          centerY: 0,\r\n          centerX: am5.p50,\r\n          populateText: true,\r\n          fontSize: 10,\r\n        }),\r\n      });\r\n    });\r\n\r\n    series.columns.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const selectedDate = dateFormat(selected.date, 'yyyy-MM-dd');\r\n      var highlightSelect: any;\r\n\r\n      // const qExpression =\r\n      const qMunicipality = \"Municipality = '\" + municipal + \"'\";\r\n      const qBarangay = \"Barangay = '\" + barangay + \"'\";\r\n      const qMunicipalBarangay = qMunicipality + ' AND ' + qBarangay;\r\n      const qDate =\r\n        'HandedOverDate IS NOT NULL' + ' AND ' + \"HandedOverDate = date'\" + selectedDate + \"'\";\r\n\r\n      var query = lotLayer.createQuery();\r\n      if (municipal && barangay) {\r\n        query.where = qDate + ' AND ' + qMunicipalBarangay;\r\n      } else if (municipal && !barangay) {\r\n        query.where = qDate + ' AND ' + qMunicipality;\r\n      } else {\r\n        query.where = qDate;\r\n      }\r\n\r\n      view.whenLayerView(lotLayer).then((layerView: any) => {\r\n        lotLayer.queryFeatures(query).then((results: any) => {\r\n          const RESULT_LENGTH = results.features;\r\n          const ROW_N = RESULT_LENGTH.length;\r\n\r\n          let objID = [];\r\n          for (var i = 0; i < ROW_N; i++) {\r\n            var obj = results.features[i].attributes.OBJECTID;\r\n            objID.push(obj);\r\n          }\r\n\r\n          var queryExt = new Query({\r\n            objectIds: objID,\r\n          });\r\n\r\n          lotLayer.queryExtent(queryExt).then(function (result) {\r\n            if (result.extent) {\r\n              view.goTo(result.extent);\r\n            }\r\n          });\r\n\r\n          if (highlightSelect) {\r\n            highlightSelect.remove();\r\n          }\r\n          highlightSelect = layerView.highlight(objID);\r\n\r\n          view.on('click', function () {\r\n            layerView.filter = new FeatureFilter({\r\n              where: undefined,\r\n            });\r\n            highlightSelect.remove();\r\n          });\r\n        });\r\n      }); // End of whenLayerView\r\n    });\r\n    series.columns.template.setAll({\r\n      tooltipText: 'Total: {valueY}',\r\n      tooltipY: am5.percent(10),\r\n      strokeOpacity: 0,\r\n    });\r\n    series.data.setAll(lotProgressData);\r\n\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, lotProgressData]);\r\n\r\n  return (\r\n    <>\r\n      {nextwidget === 'charts' ? (\r\n        <div\r\n          id={chartID}\r\n          style={{\r\n            height: '32vh',\r\n            width: '60%',\r\n            backgroundColor: '#2b2b2b',\r\n            color: 'white',\r\n            position: 'absolute',\r\n            zIndex: 99,\r\n            bottom: 10,\r\n            marginLeft: '1vw',\r\n            marginRight: 'auto',\r\n          }}\r\n        ></div>\r\n      ) : (\r\n        <div id={chartID} hidden></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LotProgressChart;\r\n"],"names":["XYCursor","Container","constructor","Object","defineProperty","this","children","push","Grid","new","_root","themeTags","Graphics","layer","x","y","_afterNew","_settings","$utils","super","setAll","p100","height","isMeasured","position","states","create","visible","opacity","_drawLines","setPrivateRaw","_disposers","setTimeout","setPrivate","lineX","events","on","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","target","_handleLineBlur","document","_handleLineMove","keyCode","_setUpTouch","chart","plotContainer","_display","cancelTouch","get","width","dir","increment","focused","xAxes","length","getIndex","getCellWidthPosition","getPrivate","yAxes","set","_line","positionX","positionY","alwaysShow","undefined","_prepareChildren","isDirty","_tooltipX","xAxis","tooltip","_updateXLine","_tooltipY","yAxis","_updateYLine","_handleSyncWith","syncWith","otherCharts","$array","cursor","_otherCharts","_updateChildren","hide","_movePoint","toGlobal","_getPoint","handleMove","$math","toLocal","_toX","animate","key","to","duration","easing","_toY","display","moveTo","lineTo","updateCursor","_setChart","event","originalEvent","_handleMove","_handleCursorDown","_handleCursorUp","native","isHidden","$object","_downPoints","parent","moveValue","selection","_inPlot","point","inPlot","button","rootPoint","local","_downPoint","show","type","isEnabled","dispatch","_getPosition","behavior","charAt","downPoint","moveThreshold","Math","abs","lastPoint","_lastPoint","round","skipEvent","xyPos","snapToSeries","userPositionX","$type","userPositionY","xy","each","axis","_handleCursorPosition","handleCursorShow","_updateLines","arrangeTooltips","_updateSelection","w","h","_onHide","handleCursorHide","series","_onShow","_dispose","dispose","classNames","concat","className","DateAxis","ValueAxis","_setBaseInterval","interval","_baseDuration","$time","_fixZoomFactor","maxZoomFactor","Infinity","baseMainDuration","_groupData","min","max","groupInterval","setRaw","_handleRangeChange","_dataGrouped","_groupSeriesData","baseInterval","mainDataSetId","timeUnit","count","setDataSet","resetGrouping","markDirtyExtremes","_seriesDataGrouped","intervals","baseDuration","groupIntervals","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","dataItems","_mainDataItems","groupCallback","groupOriginals","firstDay","locale","firstDayOfWeek","utc","timezone","newDataItem","previousTime","dataSetId","sum","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","intervalDuration","Date","dataItem","dataContext","time","roundedTime","getTime","DataItem","_makeDataItem","value","groupKey","currentValue","average","_dataSetId","markDirtySize","_clearDirty","_groupingCalculated","getGroupInterval","assign","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","modifiedDifference","current","newId","once","fieldName","startIndex","$order","index","endIndex","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","_adjustMinMax","gridCount","_strictMode","step","_intervalDuration","_saveMinMax","id","_getM","_prepareAxisItems","renderer","i","gridInterval","nextGridUnit","format","previousValue","formats","_dataItems","processDataItem","_createAssets","_toggleDataItem","endValue","date","label","dateFormatter","_prepareDataItem","j","inited","_markDirtyAxes","_updateGhost","_updateFinals","start","end","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","_series","processSeriesDataItem","open","close","component","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","positionToCoordinate","getDataItemPositionY","getDataItemCoordinateY","roundAxisPosition","location","NaN","getTooltipText","adjustPosition","getSeriesItem","snap","result","diValue","first","second","shouldGap","nextItem","autoGapCount","value1","zoomToDates","zoomToValues","positionToDate","dateToPosition","_ref","municipal","barangay","nextwidget","legendRef","useRef","xAxisRef","yAxisRef","chartRef","lotProgressData","setLotProgressData","useState","chartID","useEffect","generateLotProgress","then","_root$_logo","divId","am5","rootElements","root","dom","container","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","am5xy","panX","panY","wheelX","wheelY","paddingBottom","unshift","text","fontSize","fontWeight","textAlign","fill","centerX","paddingTop","maxDeviation","groupData","minGridDistance","strokeOpacity","strokeWidth","stroke","labels","template","calculateTotals","rotation","legend","centerY","oversizedBehavior","scale","name","valueYField","valueXField","valueYGrouped","bullets","locationY","locationX","sprite","interfaceColors","populateText","columns","_ev$target$dataItem","selected","selectedDate","dateFormat","highlightSelect","qMunicipality","qMunicipalBarangay","qDate","query","lotLayer","createQuery","where","view","whenLayerView","layerView","queryFeatures","results","ROW_N","features","objID","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","tooltipText","tooltipY","data","appear","_jsx","_Fragment","style","backgroundColor","color","zIndex","bottom","marginLeft","marginRight","hidden"],"sourceRoot":""}